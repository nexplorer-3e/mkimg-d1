name: revyos-kernel-build

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  # TODO: add timestamp on output bin files
  xuetie_toolchain: https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1663142514282
  toolchain_file_name: Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1-20220906.tar.gz
  ARCH: riscv

jobs:
  mkimg:
    strategy:
      fail-fast: false
      matrix:
        # toolchain_name: [thead-gcc, gcc-12]
        toolchain_name: [thead-gcc]
        board_name: [devterm_r_01, dongshan_nezha_stu, lichee_rv_86_panel, lichee_rv_dock, mangopi_mq_pro, nezha]
        kernel_name: [mq_pro, fedora]
        include:
          - name: thead-gcc
            toolchain_tripe: riscv64-unknown-linux-gnu-
          # - name: gcc-12
          #   toolchain_tripe: riscv64-linux-gnu-
          - name: devterm_r_01
            board_config: devterm_r_01_defconfig
          - name: dongshan_nezha_stu
            board_config: dongshan_nezha_stu_defconfig
          - name: lichee_rv_86_panel
            board_config: lichee_rv_86_panel_defconfig
          - name: lichee_rv_dock
            board_config: lichee_rv_dock_defconfig
          - name: mangopi_mq_pro
            board_config: mangopi_mq_pro_defconfig
          - name: nezha
            board_config: nezha_defconfig

    runs-on: ubuntu-22.04
    env:
      CROSS_COMPILE: ${{ matrix.toolchain_tripe }}
      ARCH: riscv

    steps:
      - name: Install software
        run: |
              sudo apt update && \
              sudo apt install -y gdisk dosfstools g++-12-riscv64-linux-gnu build-essential autoconf automake autotools-dev ninja-build make \
                                  libncurses-dev gawk flex bison openssl libssl-dev tree \
                                  dkms libelf-dev libudev-dev libpci-dev libiberty-dev device-tree-compiler \
                                  qemu-user-static binfmt-support mmdebstrap
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-gcc riscv64-gcc /usr/bin/riscv64-linux-gnu-gcc-12 10
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-g++ riscv64-g++ /usr/bin/riscv64-linux-gnu-g++-12 10
              wget https://mirror.iscas.ac.cn/revyos/revyos-addons/pool/main/r/revyos-keyring/revyos-keyring_2023.06.12_all.deb
                  sudo apt install ./revyos-keyring_2023.06.12_all.deb

      - name: Cache toolchains
        id: cache-theadgcc
        uses: actions/cache/restore@v3
        with:
          key: ${{ env.xuetie_toolchain }}/${{ env.toolchain_file_name }}
          path: ${{ env.toolchain_file_name }}

      - name: Download toolchains
        if: steps.cache-theadgcc.outputs.cache-hit != 'true'
        run: |
          wget ${xuetie_toolchain}/${toolchain_file_name}

      - name: Configure toolchains
        run: |
          # TODO: add path to output
          tar -xvf ${toolchain_file_name} -C /opt
          # configure git
          git config --global user.email example@example.org
          git config --global user.name "CI"

      - uses: actions/cache/save@v3
        if: steps.cache-theadgcc.outputs.cache-hit != 'true'
        with:
          key: ${{ env.xuetie_toolchain }}/${{ env.toolchain_file_name }}
          path: ${{ env.toolchain_file_name }}

      - name: Checkout kernel
        run: |
          case "${{ matrix.kernel_name }}"
          in
            "mq_pro")
              git clone https://github.com/Tina-Linux/linux-5.4 kernel
            ;;
            "fedora")
              curl http://openkoji.iscas.ac.cn/pub/dl/riscv/Allwinner/Nezha_D1/sources/linux-5.4.61.tar.xz | tar xJ
              mv linux-5.4.61 kernel
              rm -rf kernel/.git -rf  # fix applypatch-msg.sample ENOENT
              git -C kernel init
              git -C kernel add .
              git -C kernel commit -m "init"
            ;;
          esac


      - name: Checkout patches
        uses: actions/checkout@v3
        with:
          path: patches

      - name: Hash branch status
        run: |
          git -C kernel log -1 --format='%H' > refs.log
          git -C patches log -1 --format='%H' >> refs.log

      - name: Skip if branch has compiled
        id: cache-kernel
        uses: actions/cache/restore@v3
        with:
          path: kernel/
          key: kernel-${{ hashFiles('refs.log') }}

      - name: Compile Kernel
        if: steps.cache-kernel.outputs.cache-hit != 'true'
        run: |
              export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1/bin:$PATH"
              pushd kernel
                # TODO: confirm config for target board

                # apply patches
                for i in $GITHUB_WORKSPACE/patches/misc-${{ matrix.kernel_name }}/*.patch; do echo $i; git am $i; done
                # copy dtb for build
                cp -v $GITHUB_WORKSPACE/patches/misc-${{ matrix.kernel_name }}/board.dts arch/riscv/boot/dts/sunxi/board.dts
                cp -v $GITHUB_WORKSPACE/patches/misc-${{ matrix.kernel_name }}/.config .
                
                make -j$(nproc)
                make -j$(nproc) dtbs

                # Copy kernel deb packages
                make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} bindeb-pkg -j$(nproc)
              popd

      - name: Install kernel
        run: |
          mkdir -p rootfs/boot/
          export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1/bin:$PATH"
          pushd kernel
            if [ x"$(cat .config | grep CONFIG_MODULES=y)" = x"CONFIG_MODULES=y" ]; then
              sudo make INSTALL_MOD_PATH=${GITHUB_WORKSPACE}/rootfs/ modules_install -j$(nproc)
            fi
            # sudo make INSTALL_PATH=${GITHUB_WORKSPACE}/rootfs/boot zinstall -j$(nproc)

            # record commit-id
            git rev-parse HEAD > kernel-commitid
            sudo cp -v kernel-commitid ${GITHUB_WORKSPACE}/rootfs/boot/
 
            # Install Kernel
            sudo make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} INSTALL_PATH=${GITHUB_WORKSPACE}/rootfs/boot install
            sudo make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} INSTALL_PATH=${GITHUB_WORKSPACE}/rootfs/boot dtbs_install
            sudo cp -v arch/riscv/boot/Image ${GITHUB_WORKSPACE}/rootfs/boot/

            # Install DTB
            sudo cp -v arch/riscv/boot/dts/sunxi/*.dtb ${GITHUB_WORKSPACE}/rootfs/boot/
 
            # Copy kernel deb packages
            cp -v ../*.deb ${GITHUB_WORKSPACE}/rootfs/

            # TODO: Install RTL8723DS Driver for multiple kernel version
          popd
      - uses: actions/cache/save@v3
        if: steps.cache-kernel.outputs.cache-hit != 'true'
        with:
          path: kernel/
          key: kernel-${{ hashFiles('refs.log') }}

      - name: Checkout uboot
        uses: actions/checkout@v3
        with:
            repository: 'smaeul/u-boot'
            ref: 'd1-wip'
            path: 'uboot'
      
      - name: Checkout opensbi
        uses: actions/checkout@v3
        with:
            repository: 'riscv-software-src/opensbi'
            ref: 'master'
            path: 'opensbi'

      - name: opensbi compile
        run: |
            export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1/bin:$PATH"
      
            pushd opensbi
              PLATFORM=generic FW_PIC=y make
              sudo install -D -p -m 644 build/platform/generic/firmware/fw_dynamic.bin \
                  "${GITHUB_WORKSPACE}/rootfs/boot/"
            popd
            tree ${GITHUB_WORKSPACE}/rootfs

      - name: uboot compile
        run: |
              export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1/bin:$PATH"

              pushd uboot
                make ${{ matrix.board_config }}
                OPENSBI=${GITHUB_WORKSPACE}/rootfs/boot/fw_dynamic.bin make -j$(nproc)
                sudo install -D -p -m 644 u-boot-sunxi-with-spl.bin \
                  "${GITHUB_WORKSPACE}/rootfs/boot/u-boot-sunxi-with-spl.bin"
              popd
              tree ${GITHUB_WORKSPACE}/rootfs

      - name: Checkout qemu
        uses: actions/checkout@v3
        with:
          repository: revyos/qemu
          path: qemu
          ref: ab8f84892a89feea60f1bb24432ff58ce6d2885c  # TODO: remove this line

      - name: Hash branch status
        run: |
          git -C kernel log -1 --format='%H' > refs.log

      - name: Skip if branch has compiled
        id: cache-qemu
        uses: actions/cache/restore@v3
        with:
          path: qemu/
          key: qemu-${{ hashFiles('refs.log') }}

      - name: build qemu
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        run: |
            pushd qemu
              ./configure \
                --prefix=$HOME/qemu-install \
                --static \
                --target-list=riscv64-linux-user \
                --disable-system \
                --disable-pie \
                --interp-prefix=/etc/qemu-binfmt/%M
              make -j$(nproc)
            popd

      - uses: actions/cache/save@v3
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        with:
          path: qemu/
          key: qemu-${{ hashFiles('refs.log') }}
        
      - name: install qemu
        run: |
            pushd qemu
              make install
              sudo cp -fv $HOME/qemu-install/bin/qemu-riscv64 /usr/bin/qemu-riscv64-static
            popd
            ls -al /usr/bin/qemu-riscv64-static
            sudo dpkg-reconfigure binfmt-support
            
      - name: Checkout mkimg
        uses: actions/checkout@v3
        with:
            path: 'mkimg'

      - name: Make Image
        run: |
          pushd mkimg
            sudo ./mkimg.sh
          popd

      - name: compress
        run: tar -zcvf ${{ matrix.board_name }}.tar.gz rootfs

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.kernel_name }}-${{ matrix.board_name }}.tar.gz
          path: ${{ matrix.board_name }}.tar.gz
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.kernel_name }}-${{ matrix.board_name }}.img
          path: mkimg/*.img
