name: revyos-kernel-build

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  # TODO: add timestamp on output bin files
  xuetie_toolchain: https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1663142514282
  toolchain_file_name: Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1-20220906.tar.gz
  # TODO: confirm toolchain
  toolchain_tripe: riscv64-linux-gnu-
  ARCH: riscv

jobs:
  kernel:
    runs-on: ubuntu-22.04

    steps:
      - name: Install software
        run: |
              sudo apt update && \
              sudo apt install -y gdisk dosfstools g++-12-riscv64-linux-gnu build-essential \
                                  libncurses-dev gawk flex bison openssl libssl-dev tree \
                                  dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf device-tree-compiler
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-gcc riscv64-gcc /usr/bin/riscv64-linux-gnu-gcc-12 10
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-g++ riscv64-g++ /usr/bin/riscv64-linux-gnu-g++-12 10

      - name: Checkout kernel
        uses: actions/checkout@v3
        with:
            repository: 'smaeul/linux'
            ref: 'd1/wip'
            path: 'kernel'

      - name: Configure toolchains
        run: |
              mkdir rootfs && mkdir rootfs/boot
              wget ${xuetie_toolchain}/${toolchain_file_name}
              tar -xvf ${toolchain_file_name} -C /opt

      - name: Compile Kernel && Install
        run: |
              export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1/bin:$PATH"

              pushd kernel
                # TODO: confirm config for target board

                # TODO: move custom kernel config to new defconfig
                echo 'CONFIG_WIRELESS=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_CFG80211=m' >> arch/riscv/configs/nezha_defconfig
                # enable /proc/config.gz
                echo 'CONFIG_IKCONFIG=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_IKCONFIG_PROC=y' >> arch/riscv/configs/nezha_defconfig
                # enable USB-LAN support
                echo 'CONFIG_USB_NET_DRIVERS=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_CATC=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_KAWETH=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_PEGASUS=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_RTL8150=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_RTL8152=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_LAN78XX=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_USBNET=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_AX8817X=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_AX88179_178A=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_CDCETHER=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_CDC_EEM=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_CDC_NCM=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_HUAWEI_CDC_NCM=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_CDC_MBIM=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_DM9601=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_SR9700=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_SR9800=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_SMSC75XX=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_SMSC95XX=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_GL620A=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_NET1080=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_PLUSB=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_MCS7830=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_RNDIS_HOST=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_CDC_SUBSET_ENABLE=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_CDC_SUBSET=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_ALI_M5632=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_AN2720=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_BELKIN=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_ARMLINUX=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_EPSON2888=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_KC2190=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_ZAURUS=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_CX82310_ETH=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_KALMIA=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_QMI_WWAN=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_INT51X1=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_IPHETH=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_SIERRA_NET=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_VL600=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_CH9200=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_NET_AQC111=m' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_USB_RTL8153_ECM=m' >> arch/riscv/configs/nezha_defconfig
                # enable systemV IPC (needed by fakeroot during makepkg)
                echo 'CONFIG_SYSVIPC=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_SYSVIPC_SYSCTL=y' >> arch/riscv/configs/nezha_defconfig
                # enable swap
                echo 'CONFIG_SWAP=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_ZSWAP=y' >> arch/riscv/configs/nezha_defconfig
                # enable Cedrus VPU Drivers
                echo 'CONFIG_MEDIA_SUPPORT=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_MEDIA_CONTROLLER=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_MEDIA_CONTROLLER_REQUEST_API=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_V4L_MEM2MEM_DRIVERS=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_VIDEO_SUNXI_CEDRUS=y' >> arch/riscv/configs/nezha_defconfig
                # enable binfmt_misc
                echo 'CONFIG_BINFMT_MISC=y' >> arch/riscv/configs/nezha_defconfig
                # enable EFI
                echo 'CONFIG_EFI=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_EFI_ZBOOT=y' >> arch/riscv/configs/nezha_defconfig
                # enable fat
                echo 'CONFIG_VFAT_FS=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-15"' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_FAT_DEFAULT_UTF8=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_EXFAT_FS=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_NLS_CODEPAGE_437=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_NLS_ISO8859_15=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_NLS_DEFAULT="utf8"' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_NLS_UTF8=y' >> arch/riscv/configs/nezha_defconfig
                # enable initramfs compression
                echo 'CONFIG_BLK_DEV_INITRD=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_INITRAMFS_SOURCE=""' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_RD_GZIP=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_RD_BZIP2=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_RD_LZMA=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_RD_XZ=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_RD_LZO=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_RD_LZ4=y' >> arch/riscv/configs/nezha_defconfig
                echo 'CONFIG_RD_ZSTD=y' >> arch/riscv/configs/nezha_defconfig

                make ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} nezha_defconfig
                make ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} -j$(nproc)
                make ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} -j$(nproc) dtbs
                if [ x"$(cat .config | grep CONFIG_MODULES=y)" = x"CONFIG_MODULES=y" ]; then
                  sudo make ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} INSTALL_MOD_PATH=${GITHUB_WORKSPACE}/rootfs/ modules_install -j$(nproc)
                fi
                # sudo make ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} INSTALL_PATH=${GITHUB_WORKSPACE}/rootfs/boot zinstall -j$(nproc)

                # Install Kernel
                sudo make ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} INSTALL_PATH=${GITHUB_WORKSPACE}/rootfs/boot install
                sudo make ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} INSTALL_PATH=${GITHUB_WORKSPACE}/rootfs/boot dtbs_install
                sudo cp -v arch/riscv/boot/Image ${GITHUB_WORKSPACE}/rootfs/boot/

                # record commit-id
                git rev-parse HEAD > kernel-commitid
                sudo cp -v kernel-commitid ${GITHUB_WORKSPACE}/rootfs/boot/

                # Install DTB
                # sudo cp -v arch/riscv/boot/dts/allwinner/*.dtb ${GITHUB_WORKSPACE}/rootfs/boot/

                # Copy kernel deb packages
                make ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} bindeb-pkg -j$(nproc)
                cp -v ../*.deb ${GITHUB_WORKSPACE}/rootfs/

                # Install RTL8723DS Driver
                git clone https://github.com/lwfinger/rtl8723ds.git
                pushd rtl8723ds
                    make ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} KSRC=../ -j$(nproc) modules || true
                popd
                for kernel_version in $(ls ${GITHUB_WORKSPACE}/rootfs/lib/modules/);
                do
                    sudo install -D -p -m 644 "rtl8723ds/8723ds.ko" \
                        "${GITHUB_WORKSPACE}/rootfs/lib/modules/${kernel_version}/kernel/drivers/net/wireless/8723ds.ko"
                    depmod -a -b "${GITHUB_WORKSPACE}/rootfs" "${kernel_version}"
                    echo '8723ds' >> 8723ds.conf
                    sudo mkdir -p ${GITHUB_WORKSPACE}/rootfs/etc/modules-load.d/
                    sudo cp -v 8723ds.conf "${GITHUB_WORKSPACE}/rootfs/etc/modules-load.d/"
                done
              popd

      - name: compress
        run: tar -zcvf kernel.tar.gz rootfs

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: kernel.tar.gz
          path: kernel.tar.gz
          retention-days: 30

  misc:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: devterm_r_01
            board_config: devterm_r_01_defconfig
          - name: dongshan_nezha_stu
            board_config: dongshan_nezha_stu_defconfig
          - name: lichee_rv_86_panel
            board_config: lichee_rv_86_panel_defconfig
          - name: lichee_rv_dock
            board_config: lichee_rv_dock_defconfig
          - name: mangopi_mq_pro
            board_config: mangopi_mq_pro_defconfig
          - name: nezha
            board_config: nezha_defconfig
    runs-on: ubuntu-22.04
    steps:
      - name: Install software
        run: |
              sudo apt update && \
              sudo apt install -y gdisk dosfstools g++-12-riscv64-linux-gnu build-essential \
                                  libncurses-dev gawk flex bison openssl libssl-dev tree \
                                  dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf device-tree-compiler
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-gcc riscv64-gcc /usr/bin/riscv64-linux-gnu-gcc-12 10
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-g++ riscv64-g++ /usr/bin/riscv64-linux-gnu-g++-12 10

      - name: Checkout uboot
        uses: actions/checkout@v3
        with:
            repository: 'smaeul/u-boot'
            ref: 'd1-wip'
            path: 'uboot'

      - name: Checkout opensbi
        uses: actions/checkout@v3
        with:
            repository: 'riscv-software-src/opensbi'
            ref: 'master'
            path: 'opensbi'

      - name: Configure toolchains
        run: |
              mkdir rootfs && mkdir rootfs/boot
              wget ${xuetie_toolchain}/${toolchain_file_name}
              tar -xvf ${toolchain_file_name} -C /opt

      - name: opensbi compile
        run: |
            export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1/bin:$PATH"
      
            pushd opensbi
              ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} PLATFORM=generic FW_PIC=y make
              sudo install -D -p -m 644 build/platform/generic/firmware/fw_dynamic.bin \
                  "${GITHUB_WORKSPACE}/rootfs/boot/"
            popd
            tree ${GITHUB_WORKSPACE}/rootfs

      - name: uboot compile
        run: |
              export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1/bin:$PATH"

              pushd uboot
                ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} make ${{ matrix.board_config }}
                ARCH=${ARCH} CROSS_COMPILE=${toolchain_tripe} OPENSBI=${GITHUB_WORKSPACE}/rootfs/boot/fw_dynamic.bin make -j$(nproc)
                sudo install -D -p -m 644 u-boot-sunxi-with-spl.bin \
                  "${GITHUB_WORKSPACE}/rootfs/boot/u-boot-${{ matrix.name }}-with-spl.bin"
              popd
              tree ${GITHUB_WORKSPACE}/rootfs

      - name: compress
        run: tar -zcvf misc-${{ matrix.name }}.tar.gz rootfs

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: misc-${{ matrix.name }}.tar.gz
          path: misc-${{ matrix.name }}.tar.gz
          retention-days: 30
